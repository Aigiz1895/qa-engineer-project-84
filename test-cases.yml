---
- summary: |
    Проверка работы ссылки в интернет магазина
  requirement: |
    Убедиться, что при переходе по ссылке откроется страница "Hexlet Store" 
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: https://hexlet-products-store.vercel.app/
  steps:
      - Открыть указанный URL
      - Проверить, что страница загрузилась успешно
      - Убедиться, что на странице нет лишних ссылок и информации
  expected-result: >
    Страница должна открываться без ошибок. На странице не должно
    быть лишних компонентов в виде ссылок и информации не касающихся магазина
- summary: |
    Проверка отображения продуктов
  requirement: |
    Убедиться, что все продукты отображаются корректно
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Просмотреть список всех продуктов
  test-data: no-data
  steps:
      - Открыть указанный URL.
      - Просмотреть список отображаемых продуктов.
      - Проверить, что каждый продукт имеет название, описание и кнопку "В корзину".
  expected-result: >
    Все продукты должны отображаться с их названиями, количеством,
    описаниями, ценами и с кнопкой "В корзину"
- summary: |
    Проверка кнопок перехода на другую страницу с продуктами
  requirement: |
    Убедиться в работе кнопок "Следующая" и "Предыдущая"
  prerequisites: |
    Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
      - Открыть указанный URL
      - Нажать на кнопку "Следующая"
      - Проверить, что открылась следующая страница с продуктами
      - Нажать на кнопку "Предыдущая"
      - Проверить, что вернулась предыдущая страница
  expected-result: >
    При нажатии кнопки "Следующая" должна открыться другая страница
    с продуктами
    При нажатии кнопки "Предыдущая" страница должна вернуться на предыдущую страницу с продуктами
- summary: |
    Проверка корректности информации о продукте
  requirement: >
    Убедиться, что информация о каждом продукте соответствует описанию
    при открытии продукта
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
      - Открыть указанный URL
      - Нажать на продукт
      - Проверить, что описание соответствует ожидаемому
  expected-result: >
    Данные продуктов на странице должны совпадать с описанием
    продукта при его выборе
- summary: |
    Добавление продукта в корзину
  requirement: |
    Убедиться, что пользователь может успешно добавить продукт в корзину
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
      - Открыть указанный URL
      - Нажать на кнопку "В корзину" рядом с "Essence Mascara Lash Princess"
      - Перейти в корзину
      - Убедиться, что "Essence Mascara Lash Princess" добавлен в корзину
  expected-result: >
    Продукт должен появиться в корзине, и над иконкой корзины
    должен отображаться счетчик с количеством добавленных товаров
- summary: |
    Проверка ограничения по количеству добавляемого продукта в корзину
  requirement: >
    Убедиться, что пользователь не может добавить в корзину больше
    продукта, чем указано в наличии
  prerequisites: >
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: 
      - название продукта: "Essence Mascara Lash Princess"
      - в наличии: 5
  steps:
      - Открыть указанный URL
      - Нажимать кнопку "В корзину" для "Essence Mascara Lash Princess" до достижения максимального количества
      - Перейти в корзину
      - Убедиться, что количество не превышает 5
  expected-result: >
    Общее количество добавленного продукта в корзине не должно
    превышать количество, указанное на странице продукта   
- summary: |
    Проверка корректности цены, скидки и наличия рейтинга продукта
  requirement: >
    Убедиться, что при переходе на страницу продукта цена и скидка
    соответствуют указанным на странице магазина,
    а также, что у товара есть рейтинг
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Открыть любой продукт
  test-data: 
    - https://products-store-git-v2bugfixes-hexlet-components.vercel.app/products/1
    - ожидаемая цена: 9.27$
    - ожидаемая скидка: 7.17%
  steps:
    - Открыть указанный URL продукта из test-data
    - Записать информацию о цене и скидке с текущей страницы
    - Сравнить записанную цену с ожидаемой ценой из test-data
    - Сравнить извлеченную скидку с ожидаемой скидкой из test-data
    - Проверить наличие рейтинга продукта на странице
    - Убедиться, что все данные четко видны и легко читаемы на странице
  expected-result: >
    1. Цена и скидка на странице продукта должны соответствовать
    цене и скидке в открытом товаре
    2. У товара обязательно должен присутствовать рейтинг
    3. Все данные (цена, скидка, рейтинг) должны быть четко видны и легко читаемы на странице
- summary: |
    Проверка перехода в корзину
  requirement: >
    Убедиться, что пользователь может перейти в корзину после добавления продукта
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Добавить любой продукт
    3. Нажать на кнопку "В корзину"
  test-data:
    - https://products-store-git-v2bugfixes-hexlet-components.vercel.app/products/2  # Замените на конкретный URL продукта
    - количество: 1
    - общая сумма: 18.89 $
    - скидка: 5.5%
  steps:
    - Открыть главную страницу магазина по URL из prerequisites
    - Перейти к выбранному продукту по URL из test-data и добавить его в корзину
    - Нажать на кнопку "В корзину"
    - Убедиться, что в корзине отображаются все добавленные продукты
    - Проверить количество добавленного продукта (должно соответствовать количеству из test-data)
    - Вычислить общую сумму и проверить, что она соответствует общей сумме из test-data
    - Проверить наличие скидки и убедиться, что она равна скидке из test-data
    - Убедиться, что информация о продуктах, количестве, общей сумме и скидке четко видна и легко читаема на странице корзины
  expected-result: >
    Должны отображаться все добавленные продукты, количество, общая
    сумма и скидка
- summary: |
    Проверка работы кнопки "В корзину" для всех продуктов
  requirement: |
    Убедиться, что кнопка "В корзину" работает на всех продуктах
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по URL из prerequisites
    - Добавить все имеющиеся продукты
    - Проверить, что количество товаров в корзине увеличилось
    - Проверить, что в корзине присутствуют все продукты без ошибок
  expected-result: |
    Все товары должны быть добавлены в корзину без ошибок
- summary: |
    Проверка корректного отображения цен и скидки для всех продуктов
  requirement: |
    Убедиться, что цены и скидки отображаются правильно для каждого продукта
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по URL из prerequisites
    - Проверить отображение текущей цены и цены со скидкой для всех продуктов
    - Перейти на другие страницы и повторить шаг 2
  expected-result: |
    Цены должны быть отображены понятно, включая скидки или старые цены
- summary: |
    Проверка удаления продукта из корзины
  requirement: |
    Убедиться, что пользователь может успешно удалить продукт из корзины
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Добавить товар в корзину
    3. Перейти в корзину
  test-data: https://products-store-git-v2bugfixes-hexlet-components.vercel.app/products/1
  steps:
    - Открыть главную страницу магазина по URL из prerequisites
    - Найти продукт из test-data и перейти на его страницу по указанному url
    - Нажать кнопку "В корзину"
    - Перейти в корзину, нажав на кнопку корзины
    - Убедиться, что добавленный продукт отображается в корзине
    - Нажать кнопку "Удалить" рядом с добавленным товаром
    - Проверить, что продукт был удален из списка товаров в корзине
    - Убедиться, что общая стоимость продуктов в корзине обновилась и соответствует ожидаемому значению
  expected-result: >
    Товар должен быть удален с корзины, а общая стоимость продуктов
    должна обновиться
- summary: |
    Проверка очистки корзины
  requirement: |
    Убедиться, что пользователь может успешно очистить корзину от товара
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Добавить в корзину товар
    3. Перейти в корзину
  test-data:
          https://products-store-git-v2bugfixes-hexlet-components.vercel.app/products/1
          https://products-store-git-v2bugfixes-hexlet-components.vercel.app/products/2
  steps:
    - Открыть главную страницу магазина по URL из prerequisites
    - Найти продукт из test-data например, "Essence Mascara Lash Princess" и перейти на его страницу по указанному url
    - Нажать кнопку "В корзину" для "Essence Mascara Lash Princess"
    - Повторить шаги 2-3 для "Eyeshadow Palette with Mirror"
    - Перейти в корзину, нажав на кнопку корзины
    - Убедиться, что добавленные продукты отображаются в корзине
    - Нажать кнопку "Очистить корзину"
    - Проверить, что корзина стала пустой
  expected-result: |
    Корзина товаров должна быть пустой
- summary: |
    Проверка формы оформления заказа
  requirement: |
    Убедиться, что форма оформления заказа загружается корректно
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Добавить товар в корзину
    3. Перейти в корзину
  test-data: https://hexlet-products-store.vercel.app/products/5
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Найти товар из test-data
    - Нажать "В корзину"
    - Перейти в корзину
    - Нажать "Оформить заказ"
    - Убедиться, что появилась форма с надписью "Заказ успешно оформлен"
  expected-result: >
    Должна открыться форма оформления заказа с полями продуктов
    находящихся в корзине и кнопкой закрытия формы
- summary: >
    Проверка кнопки "Продолжить покупки" которая находится при переходе в корзину
  requirement: >
    Убедиться, что нажимая на кнопку "Продолжить покупки" пользователь
    перейдет на страницу с продуктами
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Перейти в корзину
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Нажать "Корзина"
    - Нажать "Продолжить покупки"
    - Убедиться, что произошел переход на страницу с товарами
  expected-result: |
    Должна открыться страница с продуктами
- summary: |
    Проверка работы поиска товара с помощью поисковой строки в магазине
  requirement: >
    Убедиться, что пользователь может использовать поисковую строку для
    поиска определенного товара
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Ввести название товара из test-data
    - Убедиться, что товар был найден
    - Проделать шаг 2, 3 для всех товаров    # По моему мнению, для всей функциональности типа "Поиск, категории, производитель и т.д) лучше автотесты, ведь товаров может быть 10-ки тысяч, только без понятия как это реализовать :)
  expected-result: >
    Если товар присутствует в магазине, то он должен появиться на
    странице, а если товара нет, то должна появиться надпись "Ничего не
    найдено!"
- summary: |
    Проверка работы фильтра "Категория" 
  requirement: >
    Убедиться, что пользователь может фильтровать товары по различным
    категориям
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Нажать на всплывающий список "Категории"
    - Выбрать категорию из test-data
    - Убедиться, что товары фильтруются по выбранной категории
    - Проделать шаг 2, 3 для всех категорий
  expected-result: >
    При выборе категории на странице должны появиться только те товары, которые подходят под выбранную категорию
- summary: |
    Проверка работы фильтра "Производитель" 
  requirement: |
    Убедиться, что пользователь может фильтровать продукты по производителю
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - В checkbox "Производитель" поставить галочку в указанный производитель в test-data
    - Убедиться, что появится товар производителя
    - Проделать шаг 2, 3 для всех производителей
  expected-result: >
    При выборе производителя на странице должны появиться только те
    продукты, которые подходят под выбранного производителя
- summary: |
    Проверка наличия наименований в checkbox "Производитель" 
  requirement: |
    Убедиться, что присутствуют все наименования в checkbox "Производитель"
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Проверить наличия наименований в checkbox "Производитель"
    - Выполнить шаг 2 на каждой странице
  expected-result: >
    В checkbox "Производитель" должны присутствовать наименования
    всей продукции на каждой странице   
- summary: |
    Проверка работы фильтра "В наличии" 
  requirement: |
    Убедиться, что пользователь может фильтровать продукты по наличию
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Убедиться что checkbox "В наличии" активна
    - Убедиться, что товары в наличии отображены на странице
    - Выполнить шаг 2, 3 на каждой странице
  expected-result: >
    При активной кнопке "В наличии" на странице должны быть товары
    количество которых не равно 0
- summary: |
    Проверка работы фильтра "Цена" 
  requirement: |
    Убедиться, что пользователь может фильтровать продукты по цене
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Ввести цену в диапазоне от и до, в "Цена"
    - Убедиться, что появляются продукты в соответствие с ценовым диапазоном
    - Выполнить шаг 2, 3 на каждой странице
  expected-result: >
    После ввода цены от и до, должны появиться товары
    соответствующие ценовым диапазонам которую ввел пользователь
- summary: |
    Проверка работы смены языка
  requirement: >
    Проверить возможность успешной смены языка интерфейса
    на русском или английском. При выборе нового языка
    все активные кнопки и элементы управления на странице
    должны обновляться соответственно выбранному языку
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Обратить внимание на текущий выбранный язык, доступный
       в выпадающем списке "Язык"
    - Нажать на выпадающий список "Язык" и выбрать “Русский”
    - Проверить, что текст всех активных кнопок и элементов управления
       на текущей странице изменился на русский язык
    - Перейти на другую страницу сайта
    - Убедиться, что язык интерфейса по-прежнему установлен на русский
    - Повторить шаги 3-6, сменив язык на английский, и подтвердить,
       что язык успешно меняется на каждом этапе
  expected-result: |
    Язык активных кнопок и элементов управления должен совпадать
    с выбранным языком в выпадающем списке. Все текстовые элементы должны
    быть переведены корректно соответствующим образом
- summary: |
    Проверка наличии иконки флага при выборе языка
  requirement: >
    Убедиться, что нажимая на выпадающий список "Язык", отображаются соответствующие флаги языков
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. Убедиться, что выпадающий список "Язык" виден на странице
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Убедиться, что выпадающий список "Язык" отображается на странице
    - Нажать на выпадающий список "Язык"
    - Проверить наличие двух языков
    - Проверить наличие иконки флага для каждого языка
  expected-result: >
    При нажатии на выпадающий список "Язык" появляется список из
    двух языков с соответствующими иконками флага перед каждым языком
- summary: |
    Проверка работы SPA
  requirement: |
    Убедиться, что нажимая на кнопки, сайт не будет перезагружать страницу
  prerequisites: |
     Открыть страницу https://hexlet-products-store.vercel.app/
  test-data: no-data
  steps:
    - Открыть главную страницу магазина по url из prerequisites
    - Убедиться, что страница загружена и отображается корректно
    - Нажать на активные кнопки сайта
    - Убедиться, что контент страницы обновлён без перезагрузки всей страницы
    - Повторить шаги для всех доступных кнопок
  expected-result: |
    При нажатии на любую из активных кнопок, сайт не должен перезагружаться, а URL в адресной строке должен меняться на ожидаемый для этой кнопки
- summary: |
    Проверка работы Кроссбраузерности в Yandex браузере
  requirement: >
    Убедиться, что интернет-магазин корректно отображается и
    функционирует в разных браузерах
  prerequisites: >
    1. Открыть страницу https://hexlet-products-store.vercel.app/ в
    Yandex браузере
    2. Убедиться, что верстка отображается корректно
  test-data: no-data
  steps:
    - Открыть Yandex браузер
    - В адресной строке ввести и перейти по URL: https://hexlet-products-store.vercel.app/
    - Убедиться, что верстка сайта отображается корректно
    - Убедиться, что страница отображается без ошибок
    - Убедиться, что все товары отображаются корректно(проверить на всех страницах)
    - Убедиться, что вся доступная функциональность работает корректно
  expected-result: >
    При открытии интернет-магазина в Yandex браузере, вся
    функциональность и верстка сайта работают корректно
- summary: |
    Проверка работы Кроссбраузерности в Chrome браузере
  requirement: >
    Убедиться, что интернет-магазин корректно отображается и
    функционирует в разных браузерах
  prerequisites: >
    1. Открыть страницу https://hexlet-products-store.vercel.app/ в
    Chrome браузере
    2. Убедиться, что верстка отображается корректно
  test-data: no-data
  steps:
    - Открыть Chrome браузер
    - В адресной строке ввести и перейти по URL: https://hexlet-products-store.vercel.app/
    - В адресной строке ввести и перейти по URL: https://hexlet-products-store.vercel.app/
    - Убедиться, что верстка сайта отображается корректно
    - Убедиться, что страница отображается без ошибок
    - Убедиться, что все товары отображаются корректно(проверить на всех страницах)
    - Убедиться, что вся доступная функциональность работает корректно
  expected-result: >
    При открытии интернет-магазина в Chrome браузере, вся
    функциональность и верстка сайта работают корректно
- summary: |
    Проверка работы адаптивности
  requirement: >
    Убедиться, что интернет-магазин корректно отображается и
    функционирует в мобильной версии сайта
  prerequisites: 
     Открыть страницу https://hexlet-products-store.vercel.app/ в
    мобильной версии 
  test-data: no-data
  steps:
    - Открыть страницу указанную в prerequisites в мобильной версии сайта
    - Убедиться, что верстка отображается корректно 
    - Проверить всю функциональность сайта
  expected-result: >
    При открытии интернет магазина в мобильной версии, вся
    функциональность и верстка сайта работают корректно
- summary: |
    Проверка работы отправки формы заказа
  requirement: |
    Убедиться, что при оформлении заказа происходит отправка данных на сервер
  prerequisites: 
    1. Открыть страницу https://hexlet-products-store.vercel.app/ 
    2. Добавить товар в корзину 
    3. Перейти в корзину 
    4. Открыть DevTools 
    5. Выбрать вкладку "Сеть"
  test-data:
      описание: Отправка формы заказа
      действие: Нажать кнопку "Оформить заказ"
      ожидаемый результат: Данные отправляются на сервер, ошибка "status" "500" не возникает
  steps:
    - Открыть страницу указанную в prerequisites
    - Добавить товар в корзину
    - Перейти в корзину для оформления заказа
    - Открыть инструменты разработчика (DevTools) в браузере
    - На вкладке "Сеть" убедиться, что она активна и готова к отслеживанию запросов
    - Выполнить действие, описанное в test-data
    - Проверить вкладку "Сеть" на наличие отправленного запроса на сервер:
        a. Убедиться, что статус запроса не равен "500"
  expected-result: >
    При нажатии кнопки "Оформить заказ" не должно возникнуть ошибки "status" "500"
- summary: |
    Проверка работы кнопки формы заказа "Закрыть"
  requirement: |
    Убедиться, что работает кнопка "Закрыть" в форме заказа
  prerequisites: 
     Открыть страницу https://hexlet-products-store.vercel.app/ 
  test-data:
      описание: Закрытие формы заказа
      действие: Нажать кнопку "Закрыть"
      ожидаемый результат: Форма заказа закрывается
  steps:
    - Открыть страницу указанную в prerequisites
    - Добавить товар в корзину
    - Перейти в корзину для оформления заказа
    - Нажать кнопку "Оформить заказ", чтобы открыть форму заказа
    - Нажать кнопку "Закрыть", чтобы закрыть форму заказа
    - Проверить, что форма закрылась
  expected-result: |
    При нажатии кнопки "Закрыть" форма закрывается  
- summary: |
    Проверка работы кнопки "Х"(закрыть форму) формы заказа
  requirement: |
    Убедиться, что при нажатии на кнопку "Х" в форме заказа, форма закроется
  prerequisites: 
     Открыть страницу https://hexlet-products-store.vercel.app/ 
  test-data:
      описание: Закрытие формы заказа
      действие: Нажать кнопку "Х"
      ожидаемый результат: Форма заказа закрывается
  steps:
    - Открыть страницу указанную в prerequisites
    - Добавить товар в корзину
    - Перейти в корзину для оформления заказа
    - Нажать кнопку "Оформить заказ", чтобы открыть форму заказа
    - Нажать кнопку "Х", чтобы закрыть форму заказа
    - Проверить, что форма закрылась
  expected-result: |
    При нажатии кнопки "Х"(закрыть форму) форма должна закрыться   
- summary: |
    Проверка оплаты заказа после оформления
  requirement: |
    Убедиться, что при оформлении заказа происходит переход для оплаты
  prerequisites: 
     Открыть страницу https://hexlet-products-store.vercel.app/ 
  test-data:
      описание: Переход на страницу оплаты
      действие: Нажать кнопку "Оформить заказ"
      ожидаемый результат: В форме заказа имеется переход для оплаты заказа
  steps:
    - Открыть страницу указанную в prerequisites
    - Добавить товар в корзину
    - Перейти в корзину для оформления заказа
    - Нажать кнопку "Оформить заказ", чтобы открыть форму заказа
    - Убедиться, что в открытой форме есть переход для оплаты заказа
  expected-result: >
    При нажатии на кнопку "Оформить заказ" должен быть переход на
    страницу для оплаты
- summary: |
    Проверить, что товар которого нет в наличии нельзя добавить в корзину
  requirement: |
    Убедиться, что товар которого нет в наличии не добавиться в корзину
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. В чек-боксе "В наличии" убрать галочку (чтобы отфильтровать товары, которые отсутствуют)
  test-data:
      описание: Проверка отсутствия кнопки добавления товара в корзину
      ожидаемый результат: Кнопка "В корзину" отсутствует для товаров, которых нет в наличии
  steps:
    - Открыть страницу указанную в prerequisites
    - Найти чек-бокс "В наличии" и убрать с него галочку для фильтрации товаров
    - Найти товар, который отсутствует в наличии, и перейти в его описание
    - Проверить страницу товара на наличие кнопки "В корзину"
    - Убедиться, что кнопка "В корзину" отсутствует, что подтверждает, что данный товар нельзя добавить в корзину
  expected-result: >
    Кнопка "В корзину" отсутствует для товаров, которых нет в наличии
- summary: |
    Проверить, что нельзя оформить товар которого нет в наличии
  requirement: |
    Убедиться, что товар которого нет в наличии нельзя купить
  prerequisites: |
    1. Открыть страницу https://hexlet-products-store.vercel.app/
    2. В чек-боксе "В наличии" убрать галочку
  test-data:
      описание: Проверка оформления товара, которого нет в наличии
      действия: 
          1. Перейти в описание товара, количество которого равно нулю
          2. Добавить товар в корзину
          3. Перейти в корзину
          4. Нажать на кнопку "Оформить заказ"
  steps:
    - Открыть страницу указанную в prerequisites
    - Найти чек-бокс "В наличии" на странице и убрать с него галочку
    - Найти товар, который отсутствует в наличии, и перейти в его описание
    - Нажать на кнопку "В корзину" для выбранного товара
    - Перейти в корзину, чтобы просмотреть добавленный товар
    - Нажать на кнопку "Оформить заказ"
    - Проверить, активна ли кнопка "Оформить заказ". 
    - Убедиться, что кнопка "Оформить заказ" неактивна для товара, которого нет в наличии
  expected-result: >
    При переходе к оформлению товара которого нет в наличии кнопка
    "Оформить заказ" должна быть неактивна
